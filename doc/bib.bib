

@book{EngineeringCompiler,
abstract = {Overview Scanning Parsing Context-Sensitive Analysis Intermediate Representations The Procedure Abstraction Code Shape Introduction to Code Optimization Data-Flow Analysis Scalar Optimizations Instruction Selection Instruction Scheduling Register Allocation ILOC Data Structures},
booktitle = {Engineering a Compiler},
doi = {10.1016/C2009-0-27982-7},
isbn = {9780120884780},
publisher = {Elsevier},
title = {{Engineering a Compiler}},
url = {https://linkinghub.elsevier.com/retrieve/pii/C20090279827},
year = {2012}
}

@incollection{Mckeeman1974,
abstract = {A compiler is a program, written in an implementation language, accepting text in a source language and producing text in a target language. Language description languages are used to define all of these languages and themselves as well. The source language is an algorithmic language to be used by programmers. The target language is suitable for execution by some particular computer.},
author = {Mckeeman, W. M.},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-662-21549-4_1},
isbn = {9783540069584},
issn = {16113349},
pages = {1--36},
title = {{Compiler Construction}},
url = {http://link.springer.com/10.1007/978-3-662-21549-4_1},
year = {1974}
}
